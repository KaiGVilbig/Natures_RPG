{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["sampleObservationList","title","image","description","key","queryString","window","location","search","username","URLSearchParams","get","Observation","props","sm","md","lg","className","style","paddingBottom","src","top","body","App","useState","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","message","observations","displayName","map","observation","console","log","results","taxon","name","photos","url","place_guess","paddingTop","paddingLeft","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77fb74b0.chunk.js","sourcesContent":["import {\n  Card,\n  CardTitle,\n  CardImg,\n  CardBody\n} from \"shards-react\";\nimport { Container, Row, Col} from \"shards-react\";\nimport React, { useEffect, useState } from \"react\";\n\n// Sample observations for testing\nconst sampleObservationList = [\n  {title:\"Observation Name\", image:\"https://loremflickr.com/300/200/wildlife?random=1\", description:\"Description\", key:1},\n  {title:\"Observation Name\", image:\"https://loremflickr.com/300/200/wildlife?random=2\", description:\"Description\", key:2},\n  {title:\"Observation Name\", image:\"https://loremflickr.com/300/200/wildlife?random=3\", description:\"Description\", key:3},\n  {title:\"Observation Name\", image:\"https://loremflickr.com/300/200/wildlife?random=4\", description:\"Description\", key:4},\n  {title:\"Observation Name\", image:\"https://loremflickr.com/300/200/wildlife?random=5\", description:\"Description\", key:5},\n  {title:\"Observation Name\", image:\"https://loremflickr.com/300/200/wildlife?random=6\", description:\"Description\", key:6},\n  {title:\"Observation Name\", image:\"https://loremflickr.com/300/200/wildlife?random=7\", description:\"Description\", key:7},\n  {title:\"Observation Name\", image:\"https://loremflickr.com/300/200/wildlife?random=8\", description:\"Description\", key:8},\n  {title:\"Observation Name\", image:\"https://loremflickr.com/300/200/wildlife?random=9\", description:\"Description\", key:9},\n  {title:\"Observation Name\", image:\"https://loremflickr.com/300/200/wildlife?random=10\", description:\"Description\", key:10}\n];\n\nconst queryString = window.location.search;\nconst urlParams = new URLSearchParams(queryString);\nconst username = urlParams.get('username');\n\n// Observation component\n// This is a basic component that gets populated with data\n// to be used in the list of observations\nfunction Observation(props) {\n  return (\n    <Col sm=\"6\" md=\"4\" lg=\"3\">\n      <div className=\"Observation\" style={{ paddingBottom: \"30px\"}}>\n        <Card>\n          <CardImg src={props.image} top=\"true\"/>\n          <CardBody>\n            <CardTitle>{props.title}</CardTitle>\n            <p>{props.body}</p>\n          </CardBody>\n        </Card>\n      </div>\n    </Col>\n  );\n}\n\n\n// Essentially the app in its entirety, returning JSX to be rendered in the browser\nfunction App() {\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n\n  \n  useEffect(() => {\n\n    // Fetches data from url + username\n    fetch(\"https://api.inaturalist.org/v1/observations/?page=1&per_page=100&user_id=\" + username)\n      .then(res => res.json())\n      .then(\n\n        // We got our data\n        (result) => {\n          setIsLoaded(true);\n          setItems(result);\n        },\n\n        // Error handling\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])\n\n  // Error State\n  if(error){\n    return <div>Error: {error.message}</div>;\n  } \n  // Loading State\n  else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } \n  // Loaded State\n  else {\n    var observations = <div></div>;\n    var displayName = \"Username\";\n\n    // Loads sample data into the observations variable if no username is provided\n    if(username == null || items == 0){\n      observations = sampleObservationList.map((observation) =>\n        <Observation\n          key={observation.key}\n          title={observation.title}\n          image={observation.image}\n          body={observation.description}\n        />\n      );\n      \n    // Loads user observation data into the observations variable\n    } else {\n      console.log(items.results);\n      observations = items.results.map(observation =>\n        <Observation\n          key={observation.key}\n          title={observation.taxon.name}\n          image={observation.photos[0].url}\n          body={observation.place_guess}\n        />\n      ); \n      displayName = username;\n    }  \n\n    return (\n      <div className=\"App\">\n        <Container className=\"dr-example-container\"  style={{ paddingBottom: \"20px\"}}>\n\n          {/* User Heading */}\n          <Row>\n            <h1 style={{ paddingBottom: \"20px\", paddingTop: \"40px\", paddingLeft: \"10px\"}}>User</h1>\n          </Row>\n\n          {/* User Card */}\n          <Row>\n            <Col sm=\"6\" md=\"4\" lg=\"4\">\n              <Card>\n                <CardBody style={{marginTop: \"10px\"}}>\n\n                  {/* displayName is set to \"Username\" until data is successfully retrived from api */}\n                  <CardTitle>{displayName}</CardTitle>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n\n          {/* Observations Heading */}\n          <Row>\n            <h1 style={{ paddingBottom: \"20px\", paddingTop: \"60px\", paddingLeft: \"10px\"}}>Observations</h1>\n          </Row>\n\n          {/* Observation Cards */}\n          <Row>{observations}</Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\n// I don't know what this does but im too scared to delete it\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Alert } from \"shards-react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}