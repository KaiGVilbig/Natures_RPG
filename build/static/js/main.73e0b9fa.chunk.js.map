{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["sampleObservationList","title","image","description","Observation","props","sm","md","lg","className","style","paddingBottom","src","top","body","App","Observations","map","observation","paddingTop","paddingLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAaMA,EAAwB,CAC5B,CAACC,MAAM,mBAAoBC,MAAM,oDAAqDC,YAAY,eAClG,CAACF,MAAM,mBAAoBC,MAAM,oDAAqDC,YAAY,eAClG,CAACF,MAAM,mBAAoBC,MAAM,oDAAqDC,YAAY,eAClG,CAACF,MAAM,mBAAoBC,MAAM,oDAAqDC,YAAY,eAClG,CAACF,MAAM,mBAAoBC,MAAM,oDAAqDC,YAAY,eAClG,CAACF,MAAM,mBAAoBC,MAAM,oDAAqDC,YAAY,eAClG,CAACF,MAAM,mBAAoBC,MAAM,oDAAqDC,YAAY,gBAWpG,SAASC,EAAYC,GACnB,OACE,cAAC,IAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAtB,SACE,qBAAKC,UAAU,cAAcC,MAAO,CAAEC,cAAe,QAArD,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASC,IAAKP,EAAMH,MAAOW,IAAI,SAC/B,eAAC,IAAD,WACE,cAAC,IAAD,UAAYR,EAAMJ,QAClB,4BAAII,EAAMS,iBA8CPC,MApCf,WAGE,IAAIC,EAzBGhB,EAyB8BiB,KAAI,SAACC,GAAD,OACvC,cAACd,EAAD,CACEH,MAAOiB,EAAYjB,MACnBC,MAAOgB,EAAYhB,MACnBY,KAAMI,EAAYf,iBAItB,OACE,qBAAKM,UAAU,MAAf,SACE,eAAC,IAAD,CAAWA,UAAU,uBAArB,UACE,cAAC,IAAD,UACE,oBAAIC,MAAO,CAAEC,cAAe,OAAQQ,WAAY,OAAQC,YAAa,QAArE,oBAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAKd,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAtB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,uBACA,cAAC,IAAD,+BAKR,cAAC,IAAD,UACE,oBAAIE,MAAO,CAAEC,cAAe,OAAQQ,WAAY,OAAQC,YAAa,QAArE,4BAEF,cAAC,IAAD,UAAMJ,UCnECK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cCIdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.73e0b9fa.chunk.js","sourcesContent":["import {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardImg,\n  CardBody,\n  CardFooter,\n  CardSubtitle,\n  Button\n} from \"shards-react\";\nimport { Container, Row, Col} from \"shards-react\";\n\n// Sample observations for testing\nconst sampleObservationList = [\n  {title:\"Observation Name\", image:\"https://loremflickr.com/300/200/wildlife?random=1\", description:\"Description\"},\n  {title:\"Observation Name\", image:\"https://loremflickr.com/300/200/wildlife?random=2\", description:\"Description\"},\n  {title:\"Observation Name\", image:\"https://loremflickr.com/300/200/wildlife?random=3\", description:\"Description\"},\n  {title:\"Observation Name\", image:\"https://loremflickr.com/300/200/wildlife?random=4\", description:\"Description\"},\n  {title:\"Observation Name\", image:\"https://loremflickr.com/300/200/wildlife?random=5\", description:\"Description\"},\n  {title:\"Observation Name\", image:\"https://loremflickr.com/300/200/wildlife?random=6\", description:\"Description\"},\n  {title:\"Observation Name\", image:\"https://loremflickr.com/300/200/wildlife?random=7\", description:\"Description\"}\n];\n\n// Function to implement user data retrieval\n// Must return an array of objects\n// See sampleObservationList as a example of proper output\nfunction GetObservations(){\n  return sampleObservationList;\n}\n\n// Observation element\nfunction Observation(props) {\n  return (\n    <Col sm=\"6\" md=\"4\" lg=\"3\">\n      <div className=\"Observation\" style={{ paddingBottom: \"30px\"}}>\n        <Card>\n          <CardImg src={props.image} top=\"true\"/>\n          <CardBody>\n            <CardTitle>{props.title}</CardTitle>\n            <p>{props.body}</p>\n          </CardBody>\n        </Card>\n      </div>\n    </Col>\n  );\n}\n\n\n\nfunction App() {\n\n  // Takes in the observations, and maps them to a series of <Observation>\n  var Observations = GetObservations().map((observation) =>\n    <Observation\n      title={observation.title}\n      image={observation.image}\n      body={observation.description}\n    />\n  );\n\n  return (\n    <div className=\"App\">\n      <Container className=\"dr-example-container\">\n        <Row>\n          <h1 style={{ paddingBottom: \"20px\", paddingTop: \"40px\", paddingLeft: \"10px\"}}>User</h1>\n        </Row>\n        <Row>\n          <Col sm=\"6\" md=\"4\" lg=\"4\">\n            <Card>\n              <CardBody>\n                <CardTitle>Username</CardTitle>\n                <CardSubtitle>Level 1</CardSubtitle>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <h1 style={{ paddingBottom: \"20px\", paddingTop: \"60px\", paddingLeft: \"10px\"}}>Observations</h1>\n        </Row>\n        <Row>{Observations}</Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Alert } from \"shards-react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}